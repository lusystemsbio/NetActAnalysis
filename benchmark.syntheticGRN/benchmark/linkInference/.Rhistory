par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
XLIMIT <- c(0, 1.0) #c(0, 0.10) #
YLIMIT <-  c(0, 1.0)
m.name <- names(ppvRcall.panB)[1]
ppvRcall <- ppvRcall.panB[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=1, pch=PCH.VAL[m.name],
col=colorCur,
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision', cex.lab=CEX.LAB, cex.axis=CEX.AXIS)
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
# from second onward
for(m.name in names(ppvRcall.panB)[2:length(ppvRcall.panB)]){
print(m.name)
ppvRcall <-ppvRcall.panB[[m.name]]
colorCur <- colorv[m.name]
points(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
col=colorCur,
lty=1, pch=PCH.VAL[m.name],
xlim = c(0, 1),
ylim = c(0, 1))
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
#break
}
#legend(x=0.45, y=0.45, legend = method.names, col = colorv, lwd = 2.5, bty = "n", cex=1.2)
dev.off()
as.character(method.names)
as.character(colorv)
figname <- paste(figdir, 'legends-panB-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
par(mfrow=c(1,1))
par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
par(mgp=c(1.5, 0.4, 0))
par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
m.name <- names(ppvRcall.panB)[1]
ppvRcall <- ppvRcall.panB[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=1, pch=PCH.VAL[m.name],
col='white',
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision')
legend(x=0.01, y=0.60, legend = method.names, col = colorv, pch=PCH.VAL, bty = "n")
dev.off()
dev.list()
dev.off()
dev.off()
CEX.LAB <- 1.8
CEX.AXIS <- 1.2
#PCH.VAL <- 2
#PCH.VAL <- c(19, 0, 2, 3, 8)
PCH.VAL <- c(19, 10, 11, 12)
names(PCH.VAL) <- names(ppvRcall.panB)
LTY.VAL <- 5
WIDTH <- 6
HEIGHT <- 6
figname <- paste(figdir, 'PRcurves-panB-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
par(mfrow=c(1,1))
par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
par(mgp=c(1.5, 0.4, 0))
par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
XLIMIT <- c(0, 1.0) #c(0, 0.10) #
YLIMIT <-  c(0, 1.0)
m.name <- names(ppvRcall.panB)[1]
ppvRcall <- ppvRcall.panB[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=1, pch=PCH.VAL[m.name],
col=colorCur,
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision', cex.lab=CEX.LAB, cex.axis=CEX.AXIS)
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
# from second onward
for(m.name in names(ppvRcall.panB)[2:length(ppvRcall.panB)]){
print(m.name)
ppvRcall <-ppvRcall.panB[[m.name]]
colorCur <- colorv[m.name]
points(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
col=colorCur,
lty=1, pch=PCH.VAL[m.name],
xlim = c(0, 1),
ylim = c(0, 1))
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
#break
}
#legend(x=0.45, y=0.45, legend = method.names, col = colorv, lwd = 2.5, bty = "n", cex=1.2)
dev.off()
as.character(method.names)
as.character(colorv)
figname <- paste(figdir, 'legends-panB-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
par(mfrow=c(1,1))
par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
par(mgp=c(1.5, 0.4, 0))
par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
m.name <- names(ppvRcall.panB)[1]
ppvRcall <- ppvRcall.panB[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=1, pch=PCH.VAL[m.name],
col='white',
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision')
legend(x=0.01, y=0.60, legend = method.names, col = colorv, pch=PCH.VAL, bty = "n")
dev.off()
figdir
figdir <- "./FigsABC/"
dir.create(figdir)
WIDTH <- 6
HEIGHT <- 6
figname <- paste(figdir, 'PRcurves-panB-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
par(mfrow=c(1,1))
par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
par(mgp=c(1.5, 0.4, 0))
par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
XLIMIT <- c(0, 1.0) #c(0, 0.10) #
YLIMIT <-  c(0, 1.0)
m.name <- names(ppvRcall.panB)[1]
ppvRcall <- ppvRcall.panB[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=1, pch=PCH.VAL[m.name],
col=colorCur,
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision', cex.lab=CEX.LAB, cex.axis=CEX.AXIS)
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
# from second onward
for(m.name in names(ppvRcall.panB)[2:length(ppvRcall.panB)]){
print(m.name)
ppvRcall <-ppvRcall.panB[[m.name]]
colorCur <- colorv[m.name]
points(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
col=colorCur,
lty=1, pch=PCH.VAL[m.name],
xlim = c(0, 1),
ylim = c(0, 1))
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
#break
}
#legend(x=0.45, y=0.45, legend = method.names, col = colorv, lwd = 2.5, bty = "n", cex=1.2)
dev.off()
as.character(method.names)
as.character(colorv)
figname <- paste(figdir, 'legends-panB-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
par(mfrow=c(1,1))
par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
par(mgp=c(1.5, 0.4, 0))
par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
m.name <- names(ppvRcall.panB)[1]
ppvRcall <- ppvRcall.panB[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=1, pch=PCH.VAL[m.name],
col='white',
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision')
legend(x=0.01, y=0.60, legend = method.names, col = colorv, pch=PCH.VAL, bty = "n")
dev.off()
# Fig. panel C - netact.newlinks.R
#==================================
ppvRcall.panC <- list()
# NetAct - link inference is performed using NetAct activities
# regulon db with the following perturbations: 5, 10, 15 i.e., 25%, 50%, 75% targets
ppvRcall.panC[['ppvRcall.netact.regdb05']] <- read.table("../../sim.netact/linkPrediction/linksFromNetAct/regdb05/data/stats4newLinks.tsv", sep = '\t')
ppvRcall.panC[['ppvRcall.netact.regdb10']] <- read.table("../../sim.netact/linkPrediction/linksFromNetAct/regdb10/data/stats4newLinks.tsv", sep = '\t')
ppvRcall.panC[['ppvRcall.netact.regdb15']] <- read.table("../../sim.netact/linkPrediction/linksFromNetAct/regdb15/data/stats4newLinks.tsv", sep = '\t')
saveRDS(ppvRcall.panC, file = paste0(figdir, 'ppvRcall.panC.newlinks.rds'))
length(ppvRcall.panC)
method.names <- c('netact(regdb25)', 'netact(regdb50)', 'netact(regdb75)'#,
#'genie3+aucell(regdb00)', 'genie3+aucell(regdb05)', 'genie3+aucell(regdb10)', 'genie3+aucell(regdb15)'
)
length(method.names)
names(method.names) <- names(ppvRcall.panC)
names(ppvRcall.panC)
color.all <- c('orange', 'brown', 'cyan','green')
length(color.all)
colorv <- color.all[1:length(ppvRcall.panC)]
length(colorv)
names(colorv) <- names(ppvRcall.panC)
CEX.LAB <- 1.8
CEX.AXIS <- 1.2
#PCH.VAL <- 3
#PCH.VAL <- c(19, 10, 11, 12)
PCH.VAL <- c(10, 11, 12)
names(PCH.VAL) <- names(ppvRcall.panC)
LTY.VAL <- 5
WIDTH <- 6
HEIGHT <- 6
figname <- paste(figdir, 'PRcurves-newlinks-panC-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
par(mfrow=c(1,1))
par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
par(mgp=c(1.5, 0.4, 0))
par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
XLIMIT <- c(0, 1.0) #c(0, 0.10) #
YLIMIT <-  c(0, 1.0)
m.name <- names(ppvRcall.panC)[1]
ppvRcall <- ppvRcall.panC[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=1, pch=PCH.VAL[m.name],
col=colorCur,
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision', cex.lab=CEX.LAB, cex.axis=CEX.AXIS)
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
# from second onward
for(m.name in names(ppvRcall.panC)[2:length(ppvRcall.panC)]){
print(m.name)
ppvRcall <-ppvRcall.panC[[m.name]]
colorCur <- colorv[m.name]
points(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
col=colorCur,
lty=1, pch=PCH.VAL[m.name],
xlim = c(0, 1),
ylim = c(0, 1), cex.lab=CEX.LAB, cex.axis=CEX.AXIS
)
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
#break
}
#legend(x=0.45, y=0.45, legend = method.names, col = colorv, lwd = 2.5, bty = "n", cex=1.2)
dev.off()
as.character(method.names)
as.character(colorv)
figname <- paste(figdir, 'legends-newlinks-panC-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
par(mfrow=c(1,1))
par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
par(mgp=c(1.5, 0.4, 0))
par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
m.name <- names(ppvRcall.panC)[1]
ppvRcall <- ppvRcall.panC[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=1, pch=PCH.VAL[m.name],
col='white',
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision')
legend(x=0.01, y=0.60, legend = method.names, col = colorv, pch = PCH.VAL, bty = "n")
dev.off()
rm(list = ls())
figdir <- "./FigsABC/"
dir.create(figdir)
ppvRcall.panA <- list()
# links inferred from Activities
#--------------------------------
# NetAct inferred  links from NetAct activities
ppvRcall.panA[['ppvRcall.netact.act.regdb00']] <- read.table("../../sim.netact/linkPrediction/linksFromNetAct/regdb00/data/prValues.tsv", sep = '\t')
# genei3 inferred links AUCell actvities
ppvRcall.panA[['ppvRcall.genie3.aucell.regdb00']] <- read.table("../../sim.genie3/linksFromAUcellAct/regdb00/data/precision-recall.tsv", sep = '\t')
# links inferred from expressions
#--------------------------------
# genie3 inferred links from expressions
ppvRcall.panA[['ppvRcall.genie3.expr']] <- read.table("../../sim.genie3/linksFromExp/data/precision-recall.tsv", sep = '\t')
# grnboost2 inferred links from expressions
ppvRcall.panA[['ppvRcall.grnboost2.expr']] <- read.table("../../sim.grnboost2/linksFromExp/data/precision-recall.tsv", sep = '\t')
# ppcor inferred links from expressions
ppvRcall.panA[['ppvRcall.ppcor.expr']] <- read.table("../../sim.ppcor/linksFromExp/data/precision-recall.tsv", sep = '\t')
saveRDS(ppvRcall.panA, file = paste0(figdir, 'ppvRcall.panA.rds'))
length(ppvRcall.panA)
method.names.panA <- c('netact(regdb00)','genie3+aucell(regdb00)',
"genie3(expr)", "grnboost2(expr)", "ppcor(expr)"
)
length(method.names.panA)
names(method.names.panA) <- names(ppvRcall.panA)
names(ppvRcall.panA)
# R colors: http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf
color.all <- c('black', 'red', 'blue', 'magenta', 'darkcyan', 'orange', 'brown', 'cyan','green')
length(color.all)
colorv <- color.all[1:length(ppvRcall.panA)]
length(colorv)
names(colorv) <- names(ppvRcall.panA)
CEX.LAB <- 1.8
CEX.AXIS <- 1.2
# PCH.VAL <- 19
PCH.VAL <- c(19, 0, 2, 3, 8)
names(PCH.VAL) <- names(ppvRcall.panA)
LTY.VAL <- 5
WIDTH <- 6
HEIGHT <- 6
figname <- paste(figdir, 'PRcurves-panA-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
par(mfrow=c(1,1))
par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
par(mgp=c(1.5, 0.4, 0))
par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
XLIMIT <- c(0, 1.0) #c(0, 0.10) #
YLIMIT <-  c(0, 1.0)
m.name <- names(ppvRcall.panA)[1]
ppvRcall <- ppvRcall.panA[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=LTY.VAL, pch=PCH.VAL[m.name],
col=colorCur,
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision', cex.lab=CEX.LAB, cex.axis=CEX.AXIS)
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=2, col=colorCur)
# from second onward
for(m.name in names(ppvRcall.panA)[2:length(ppvRcall.panA)]){
print(m.name)
ppvRcall <-ppvRcall.panA[[m.name]]
colorCur <- colorv[m.name]
points(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
col=colorCur,
lty=LTY.VAL, pch=PCH.VAL[m.name],
xlim = c(0, 1),
ylim = c(0, 1))
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
#break
}
#legend(x=0.45, y=0.45, legend = method.names.panA, col = colorv, lwd = 2.5, bty = "n", cex=1.2)
dev.off()
as.character(method.names.panA)
as.character(colorv)
figname <- paste(figdir, 'legends-panA-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
par(mfrow=c(1,1))
par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
par(mgp=c(1.5, 0.4, 0))
par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
m.name <- names(ppvRcall.panA)[1]
ppvRcall <- ppvRcall.panA[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=1, pch=PCH.VAL[m.name],
col='white',
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision')
legend(x=0.01, y=0.60, legend = method.names.panA, col = colorv, bty = "n", pch = PCH.VAL)
dev.off()
# For panel B - netactWithRegdbs.R -------
#==========================================
ppvRcall.panB <- list()
# NetAct - link inference is performed using NetAct activities
# regulon db with the following perturbations: 0, 5, 10, 15 i.e., 25%, 50%, 75% targets
ppvRcall.panB[['ppvRcall.netact.regdb00']] <- read.table("../../sim.netact/linkPrediction/linksFromNetAct/regdb00/data/prValues.tsv", sep = '\t')
ppvRcall.panB[['ppvRcall.netact.regdb05']] <- read.table("../../sim.netact/linkPrediction/linksFromNetAct/regdb05/data/prValues.tsv", sep = '\t')
ppvRcall.panB[['ppvRcall.netact.regdb10']] <- read.table("../../sim.netact/linkPrediction/linksFromNetAct/regdb10/data/prValues.tsv", sep = '\t')
ppvRcall.panB[['ppvRcall.netact.regdb15']] <- read.table("../../sim.netact/linkPrediction/linksFromNetAct/regdb15/data/prValues.tsv", sep = '\t')
saveRDS(ppvRcall.panB, file = paste0(figdir, 'ppvRcall.panB.rds'))
length(ppvRcall.panB)
method.names <- c('netact(regdb00)',  'netact(regdb25)', 'netact(regdb50)', 'netact(regdb75)')
length(method.names)
names(method.names) <- names(ppvRcall.panB)
names(ppvRcall.panB)
# R colors: http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf
#color.all <- c('black', 'red', 'blue', 'magenta', 'darkcyan', 'orange', 'brown', 'cyan','green')
color.all <- c('black', 'orange', 'brown', 'cyan','green')
length(color.all)
colorv <- color.all[1:length(ppvRcall.panB)]
length(colorv)
names(colorv) <- names(ppvRcall.panB)
CEX.LAB <- 1.8
CEX.AXIS <- 1.2
#PCH.VAL <- 2
#PCH.VAL <- c(19, 0, 2, 3, 8)
PCH.VAL <- c(19, 10, 11, 12)
names(PCH.VAL) <- names(ppvRcall.panB)
LTY.VAL <- 5
WIDTH <- 6
HEIGHT <- 6
figname <- paste(figdir, 'PRcurves-panB-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
par(mfrow=c(1,1))
par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
par(mgp=c(1.5, 0.4, 0))
par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
XLIMIT <- c(0, 1.0) #c(0, 0.10) #
YLIMIT <-  c(0, 1.0)
m.name <- names(ppvRcall.panB)[1]
ppvRcall <- ppvRcall.panB[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=1, pch=PCH.VAL[m.name],
col=colorCur,
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision', cex.lab=CEX.LAB, cex.axis=CEX.AXIS)
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
# from second onward
for(m.name in names(ppvRcall.panB)[2:length(ppvRcall.panB)]){
print(m.name)
ppvRcall <-ppvRcall.panB[[m.name]]
colorCur <- colorv[m.name]
points(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
col=colorCur,
lty=1, pch=PCH.VAL[m.name],
xlim = c(0, 1),
ylim = c(0, 1))
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
#break
}
#legend(x=0.45, y=0.45, legend = method.names, col = colorv, lwd = 2.5, bty = "n", cex=1.2)
dev.off()
as.character(method.names)
as.character(colorv)
figname <- paste(figdir, 'legends-panB-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
par(mfrow=c(1,1))
par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
par(mgp=c(1.5, 0.4, 0))
par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
m.name <- names(ppvRcall.panB)[1]
ppvRcall <- ppvRcall.panB[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=1, pch=PCH.VAL[m.name],
col='white',
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision')
legend(x=0.01, y=0.60, legend = method.names, col = colorv, pch=PCH.VAL, bty = "n")
dev.off()
# Fig. panel C - netact.newlinks.R
#==================================
ppvRcall.panC <- list()
# NetAct - link inference is performed using NetAct activities
# regulon db with the following perturbations: 5, 10, 15 i.e., 25%, 50%, 75% targets
ppvRcall.panC[['ppvRcall.netact.regdb05']] <- read.table("../../sim.netact/linkPrediction/linksFromNetAct/regdb05/data/stats4newLinks.tsv", sep = '\t')
ppvRcall.panC[['ppvRcall.netact.regdb10']] <- read.table("../../sim.netact/linkPrediction/linksFromNetAct/regdb10/data/stats4newLinks.tsv", sep = '\t')
ppvRcall.panC[['ppvRcall.netact.regdb15']] <- read.table("../../sim.netact/linkPrediction/linksFromNetAct/regdb15/data/stats4newLinks.tsv", sep = '\t')
saveRDS(ppvRcall.panC, file = paste0(figdir, 'ppvRcall.panC.newlinks.rds'))
length(ppvRcall.panC)
method.names <- c('netact(regdb25)', 'netact(regdb50)', 'netact(regdb75)'#,
#'genie3+aucell(regdb00)', 'genie3+aucell(regdb05)', 'genie3+aucell(regdb10)', 'genie3+aucell(regdb15)'
)
length(method.names)
names(method.names) <- names(ppvRcall.panC)
names(ppvRcall.panC)
# R colors: http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf
#color.all <- c('black', 'red', 'blue', 'magenta', 'darkcyan', 'orange', 'brown', 'cyan','green')
color.all <- c('orange', 'brown', 'cyan','green')
length(color.all)
colorv <- color.all[1:length(ppvRcall.panC)]
length(colorv)
names(colorv) <- names(ppvRcall.panC)
CEX.LAB <- 1.8
CEX.AXIS <- 1.2
#PCH.VAL <- 3
#PCH.VAL <- c(19, 10, 11, 12)
PCH.VAL <- c(10, 11, 12)
names(PCH.VAL) <- names(ppvRcall.panC)
LTY.VAL <- 5
WIDTH <- 6
HEIGHT <- 6
figname <- paste(figdir, 'PRcurves-newlinks-panC-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
par(mfrow=c(1,1))
par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
par(mgp=c(1.5, 0.4, 0))
par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
XLIMIT <- c(0, 1.0) #c(0, 0.10) #
YLIMIT <-  c(0, 1.0)
m.name <- names(ppvRcall.panC)[1]
ppvRcall <- ppvRcall.panC[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=1, pch=PCH.VAL[m.name],
col=colorCur,
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision', cex.lab=CEX.LAB, cex.axis=CEX.AXIS)
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
# from second onward
for(m.name in names(ppvRcall.panC)[2:length(ppvRcall.panC)]){
print(m.name)
ppvRcall <-ppvRcall.panC[[m.name]]
colorCur <- colorv[m.name]
points(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
col=colorCur,
lty=1, pch=PCH.VAL[m.name],
xlim = c(0, 1),
ylim = c(0, 1), cex.lab=CEX.LAB, cex.axis=CEX.AXIS
)
lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
#break
}
#legend(x=0.45, y=0.45, legend = method.names, col = colorv, lwd = 2.5, bty = "n", cex=1.2)
dev.off()
as.character(method.names)
as.character(colorv)
figname <- paste(figdir, 'legends-newlinks-panC-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
par(mfrow=c(1,1))
par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
par(mgp=c(1.5, 0.4, 0))
par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
m.name <- names(ppvRcall.panC)[1]
ppvRcall <- ppvRcall.panC[[m.name]]
colorCur <- colorv[m.name]
plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'],
lty=1, pch=PCH.VAL[m.name],
col='white',
xlim = XLIMIT,
ylim = YLIMIT,
xlab = 'recall', ylab = 'precision')
legend(x=0.01, y=0.60, legend = method.names, col = colorv, pch = PCH.VAL, bty = "n")
dev.off()
getwd()
