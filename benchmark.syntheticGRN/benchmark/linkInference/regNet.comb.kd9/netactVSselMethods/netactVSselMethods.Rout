
R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> rm(list = ls())
> 
> figdir <- "./" 
> #dir.create(figdir) 
> 
> ppvRcall.list <- list()
> 
> # links inferred from Activities 
> #--------------------------------
> # NetAct inferred  links from NetAct activities 
> ppvRcall.list[['ppvRcall.netact.act.regdb00']] <- read.table("../../../../sim.netact/linkInference/regNet.comb.kd9/linksFromNetAct/regdb00/data/prValues.tsv", sep = '\t')
> 
> # genei3 inferred links AUCell actvities 
> ppvRcall.list[['ppvRcall.genie3.aucell.regdb00']] <- read.table("../../../../sim.genie3/regNet.comb.kd9/linksFromAUcellAct/regdb00/data/precision-recall.tsv", sep = '\t')
> 
> 
> # links inferred from expressions
> #--------------------------------
> # genie3 inferred links from expressions 
> ppvRcall.list[['ppvRcall.genie3.expr']] <- read.table("../../../../sim.genie3/regNet.comb.kd9/linksFromExp/data/precision-recall.tsv", sep = '\t')
> 
> # grnboost2 inferred links from expressions 
> ppvRcall.list[['ppvRcall.grnboost2.expr']] <- read.table("../../../../sim.grnboost2/regNet.comb.kd9/linksFromExp/data/precision-recall.tsv", sep = '\t')
> 
> # ppcor inferred links from expressions   
> ppvRcall.list[['ppvRcall.ppcor.expr']] <- read.table("../../../../sim.ppcor/regNet.comb.kd9/linksFromExp/data/precision-recall.tsv", sep = '\t')
> 
> 
> saveRDS(ppvRcall.list, file = paste0(figdir, 'ppvRcall.list.rds'))
> 
> length(ppvRcall.list)
[1] 5
> method.names <- c('netact(regdb00)','genie3+aucell(regdb00)', 
+                   "genie3(expr)", "grnboost2(expr)", "ppcor(expr)"
+                   )
> length(method.names)
[1] 5
> names(method.names) <- names(ppvRcall.list)
> names(ppvRcall.list)
[1] "ppvRcall.netact.act.regdb00"    "ppvRcall.genie3.aucell.regdb00"
[3] "ppvRcall.genie3.expr"           "ppvRcall.grnboost2.expr"       
[5] "ppvRcall.ppcor.expr"           
> 
> # R colors: http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf 
> color.all <- c('black', 'red', 'blue', 'magenta', 'darkcyan', 'orange', 'brown', 'cyan','green')
> 
> length(color.all)
[1] 9
> colorv <- color.all[1:length(ppvRcall.list)]
> length(colorv)
[1] 5
> names(colorv) <- names(ppvRcall.list)
> 
> CEX.LAB <- 1.8
> CEX.AXIS <- 1.2
> # PCH.VAL <- 19
> PCH.VAL <- c(19, 0, 2, 3, 8) 
> names(PCH.VAL) <- names(ppvRcall.list)
> LTY.VAL <- 5
> CEX.VAL <- 1.8
> 
> WIDTH <- 6
> HEIGHT <- 6
> figname <- paste(figdir, 'prCurves-', WIDTH, 'x', HEIGHT,'.pdf', sep = '') 
> pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
> par(mfrow=c(1,1)) 
> par(mar=c(3.5, 3.5, 1.5, 1.0)+0.1)  # bottom, left, top, right
> par(mgp=c(2.5, 0.8, 0)) # 1: moves axis label, 2: moves tick labels
> par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
> 
> XLIMIT <- c(0, 1.0) #c(0, 0.10) #
> YLIMIT <-  c(0, 1.0)
> 
> m.name <- names(ppvRcall.list)[1]
> ppvRcall <- ppvRcall.list[[m.name]] 
> colorCur <- colorv[m.name]
> plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'], 
+      lty=LTY.VAL, pch=PCH.VAL[m.name],
+      col=colorCur, 
+      xlim = XLIMIT,
+      ylim = YLIMIT,
+      cex=CEX.VAL,
+      xaxt='n',
+      yaxt='n',
+      xlab = 'recall', ylab = 'precision', 
+      cex.lab=CEX.LAB, cex.axis=CEX.AXIS)
> lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=2, col=colorCur)
> 
> # from second onward 
> for(m.name in names(ppvRcall.list)[2:length(ppvRcall.list)]){
+   print(m.name) 
+   ppvRcall <-ppvRcall.list[[m.name]]
+   colorCur <- colorv[m.name]
+   points(ppvRcall[,'rCall'], ppvRcall[,'ppv'], 
+          col=colorCur,
+          lty=LTY.VAL, pch=PCH.VAL[m.name],
+          cex=CEX.VAL,
+          xlim = c(0, 1),
+          ylim = c(0, 1)) 
+   lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=LTY.VAL, col=colorCur)
+   
+   #break
+ } 
[1] "ppvRcall.genie3.aucell.regdb00"
[1] "ppvRcall.genie3.expr"
[1] "ppvRcall.grnboost2.expr"
[1] "ppvRcall.ppcor.expr"
> axis(labels=NA,side=1,tck=-0.04,at=seq(0, 1, by=0.2))
> axis(labels=NA,side=2,tck=-0.04,at=seq(0, 1, by=0.2))
> #legend(x=0.45, y=0.45, legend = method.names, col = colorv, lwd = 2.5, bty = "n", cex=1.2)
> dev.off() 
null device 
          1 
> 
> as.character(method.names) 
[1] "netact(regdb00)"        "genie3+aucell(regdb00)" "genie3(expr)"          
[4] "grnboost2(expr)"        "ppcor(expr)"           
> as.character(colorv)
[1] "black"    "red"      "blue"     "magenta"  "darkcyan"
> WIDTH <- 16
> HEIGHT <- 6
> 
> figname <- paste(figdir, 'prCurve.legends-', WIDTH, 'x', HEIGHT,'.pdf', sep = '') 
> pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
> par(mfrow=c(1,1)) 
> par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
> par(mgp=c(1.5, 0.4, 0))
> par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
> 
> m.name <- names(ppvRcall.list)[1]
> ppvRcall <- ppvRcall.list[[m.name]] 
> colorCur <- colorv[m.name]
> plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'], 
+      lty=1, pch=PCH.VAL[m.name], 
+      col='white', 
+      xlim = XLIMIT,
+      ylim = YLIMIT,
+      xlab = 'recall', ylab = 'precision')
> legend(x=0.01, y=0.60, legend = method.names, col = colorv, cex=1.5,
+        bty = "n", pch = PCH.VAL, horiz=TRUE)
> dev.off() 
null device 
          1 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
  0.209   0.057   0.271 
