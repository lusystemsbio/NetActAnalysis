
R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> rm(list = ls()) 
> 
> figdir <- "./" 
> #dir.create(figdir) 
> 
> ppvRcall.list <- list()
> 
> # links inferred from Activities 
> #--------------------------------
> # NetAct -  links inferred from NetAct activities 
> ppvRcall.list[['ppvRcall.netact.act.regdb00']] <- read.table("../../../../sim.netact/linkInference/regNet.wt/linksFromNetAct/regdb00/data/prValues.tsv", sep = '\t')
> 
> # genei3 - links inferred AUCell actvities 
> ppvRcall.list[['ppvRcall.genie3.aucell.regdb00']] <- read.table("../../../../sim.genie3/regNet.wt/linksFromAUcellAct/regdb00/data/precision-recall.tsv", sep = '\t')
> 
> # grnboost2 - links from expressions
> ppvRcall.list[['ppvRcall.grnboost2.aucell.regdb00']] <- read.table("../../../../sim.grnboost2/regNet.wt/linksFromAUcellAct/regdb00/data/precision-recall.tsv", sep = '\t')
> 
> # ppcor - links from NetAct activities 
> ppvRcall.list[['ppvRcall.ppcor.netact.regdb00']] <- read.table("../../../../sim.ppcor/regNet.wt/linksFromNetAct/regdb00/data/precision-recall.tsv", sep = '\t')
> 
> 
> # links inferred from expressions
> #--------------------------------
> # NetAct -  links inferred from expressions
> ppvRcall.list[['ppvRcall.netact.expr']] <- read.table("../../../../sim.netact/linkInference/regNet.wt/linksFromExp/data/precision-recall.tsv", sep = '\t')
> # genei3 - links from expressions
> ppvRcall.list[['ppvRcall.genie3.expr']] <- read.table("../../../../sim.genie3/regNet.wt/linksFromExp/data/precision-recall.tsv", sep = '\t')
> # grnboost2 - links from expressions
> ppvRcall.list[['ppvRcall.grnboost2.expr']] <- read.table("../../../../sim.grnboost2/regNet.wt/linksFromExp/data/precision-recall.tsv", sep = '\t')
> # ppcor - links from expressions
> ppvRcall.list[['ppvRcall.ppcor.expr']] <- read.table("../../../../sim.ppcor/regNet.wt/linksFromExp/data/precision-recall.tsv", sep = '\t')
> 
> 
> saveRDS(ppvRcall.list, file = paste0(figdir, 'ppvRcall.list.rds'))
> 
> length(ppvRcall.list)
[1] 8
> method.names <- c('netact(regdb0)',  'genie3+aucell(regdb0)', 'grnboost2+aucell(regdb0)', 'ppcor+netact(regdb00)', 
+                   'netact(expr)',  'genie3(expr)', 'grnboost2(expr)', 'ppcor(expr)'
+                   ) 
> length(method.names)
[1] 8
> names(method.names) <- names(ppvRcall.list)
> names(ppvRcall.list)
[1] "ppvRcall.netact.act.regdb00"       "ppvRcall.genie3.aucell.regdb00"   
[3] "ppvRcall.grnboost2.aucell.regdb00" "ppvRcall.ppcor.netact.regdb00"    
[5] "ppvRcall.netact.expr"              "ppvRcall.genie3.expr"             
[7] "ppvRcall.grnboost2.expr"           "ppvRcall.ppcor.expr"              
> 
> # R colors: http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf 
> color.all <- c('black', 'red', 'blue', 'magenta', 'darkcyan', 'orange', 'brown', 'cyan','green')
> 
> length(color.all)
[1] 9
> colorv <- color.all[1:length(ppvRcall.list)]
> length(colorv)
[1] 8
> names(colorv) <- names(ppvRcall.list)
> 
> 
> WIDTH <- 6
> HEIGHT <- 6
> figname <- paste(figdir, 'prCurves-', WIDTH, 'x', HEIGHT,'.pdf', sep = '') 
> pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
> par(mfrow=c(1,1)) 
> par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
> par(mgp=c(1.5, 0.4, 0))
> par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
> 
> XLIMIT <- c(0, 1.0) #c(0, 0.10) #
> YLIMIT <-  c(0, 1.0)
> 
> m.name <- names(ppvRcall.list)[1]
> ppvRcall <- ppvRcall.list[[m.name]] 
> colorCur <- colorv[m.name]
> plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'], 
+      lty=1, pch=19,
+      col=colorCur, 
+      xlim = XLIMIT,
+      ylim = YLIMIT,
+      xlab = 'recall', ylab = 'precision', cex.lab=1.2)
> lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=2, col=colorCur)
> 
> # from second onward 
> for(m.name in names(ppvRcall.list)[2:length(ppvRcall.list)]){
+   print(m.name) 
+   ppvRcall <-ppvRcall.list[[m.name]]
+   colorCur <- colorv[m.name]
+   points(ppvRcall[,'rCall'], ppvRcall[,'ppv'], 
+          col=colorCur,
+          lty=1, pch=19,
+          xlim = c(0, 1),
+          ylim = c(0, 1)) 
+   lines(ppvRcall[,'rCall'], ppvRcall[,'ppv'], lty=2, col=colorCur)
+   
+   #break
+ }
[1] "ppvRcall.genie3.aucell.regdb00"
[1] "ppvRcall.grnboost2.aucell.regdb00"
[1] "ppvRcall.ppcor.netact.regdb00"
[1] "ppvRcall.netact.expr"
[1] "ppvRcall.genie3.expr"
[1] "ppvRcall.grnboost2.expr"
[1] "ppvRcall.ppcor.expr"
There were 12 warnings (use warnings() to see them)
> #legend(x=0.45, y=0.45, legend = method.names, col = colorv, lwd = 2.5, bty = "n", cex=1.2)
> dev.off() 
null device 
          1 
> 
> as.character(method.names) 
[1] "netact(regdb0)"           "genie3+aucell(regdb0)"   
[3] "grnboost2+aucell(regdb0)" "ppcor+netact(regdb00)"   
[5] "netact(expr)"             "genie3(expr)"            
[7] "grnboost2(expr)"          "ppcor(expr)"             
> as.character(colorv)
[1] "black"    "red"      "blue"     "magenta"  "darkcyan" "orange"   "brown"   
[8] "cyan"    
> 
> figname <- paste(figdir, 'prCurve.legends-', WIDTH, 'x', HEIGHT,'.pdf', sep = '') 
> pdf(file = figname, width=WIDTH , height=HEIGHT, paper='special', onefile = TRUE)
> par(mfrow=c(1,1)) 
> par(mar=c(2.5, 3.0, 1.5, 1.0))  # bottom, left, top, right
> par(mgp=c(1.5, 0.4, 0))
> par(oma=c(3, 1, 1, 1)) # all sides have 3 lines of space
> 
> m.name <- names(ppvRcall.list)[1]
> ppvRcall <- ppvRcall.list[[m.name]] 
> colorCur <- colorv[m.name]
> plot(ppvRcall[,'rCall'], ppvRcall[,'ppv'], 
+      lty=1, pch=19, 
+      col='white', 
+      xlim = XLIMIT,
+      ylim = YLIMIT,
+      xlab = 'recall', ylab = 'precision')
> legend(x=0.01, y=0.60, legend = method.names, col = colorv, lwd = 2.5, bty = "n")
> dev.off() 
null device 
          1 
> 
> proc.time()
   user  system elapsed 
  0.179   0.050   0.221 
