{
    "collab_server" : "",
    "contents" : "\n\n\nrm(list=ls())\nsetwd(getwd())\n\n# Calculate target sizes for regDBs with NO perturbations\n#-------------------------------------------------------\nfname.regdb <- './regDB.nopert.rds' \nregDB.nopert <- readRDS(file = fname.regdb)\ntarget.size.nopert <- length(unique(unlist(regDB.nopert)))\nprint(target.size.nopert)\n\n\n# Calculate target sizes for regDBs with 5 perturbations\n#-------------------------------------------------------\nfname.regdb <- './regDBs.5.rds' \nregDBs <- readRDS(file = fname.regdb)\ntarget.sizes.regDB.5 <- list()\nfor(regdb.id in names(regDBs)){\n   print(regdb.id) \n   regdb <- regDBs[[regdb.id]] \n   target.sizes.regDB.5[[regdb.id]] <- length(unique(unlist(regdb)))\n   #break()\n}\nhist(as.numeric(target.sizes.regDB.5))\n\n\n# Calculate target sizes for regDBs with 10 perturbations\n#-------------------------------------------------------\nfname.regdb <- './regDBs.10.rds' \nregDBs <- readRDS(file = fname.regdb)\ntarget.sizes.regDB.10 <- list()\nfor(regdb.id in names(regDBs)){\n   print(regdb.id) \n   regdb <- regDBs[[regdb.id]] \n   target.sizes.regDB.10[[regdb.id]] <- length(unique(unlist(regdb)))\n   #break()\n}\nhist(as.numeric(target.sizes.regDB.10))\n\n\n# Calculate target sizes for regDBs with 15 perturbations\n#--------------------------------------------------------\nfname.regdb <- './regDBs.15.rds' \nregDBs <- readRDS(file = fname.regdb)\ntarget.sizes.regDB.15 <- list()\nfor(regdb.id in names(regDBs)){\n   print(regdb.id) \n   regdb <- regDBs[[regdb.id]] \n   target.sizes.regDB.15[[regdb.id]] <- length(unique(unlist(regdb)))\n   #break()\n}\nhist(as.numeric(target.sizes.regDB.15))\n\n\n# Means of target size distributions\n#-----------------------------------------\nmean.target.size.regDB.5 <- round(mean(as.numeric(target.sizes.regDB.5)))\nmean.target.size.regDB.10 <- round(mean(as.numeric(target.sizes.regDB.10)))\nmean.target.size.regDB.15 <- round(mean(as.numeric(target.sizes.regDB.15)))\n\n# Ranges of target size distributions\n#-----------------------------------------\nrange.target.size.regDB.5 <- c(min(as.numeric(target.sizes.regDB.5)), max(as.numeric(target.sizes.regDB.5))) \nrange.target.size.regDB.10 <- c(min(as.numeric(target.sizes.regDB.10)), max(as.numeric(target.sizes.regDB.10))) \nrange.target.size.regDB.15 <- c(min(as.numeric(target.sizes.regDB.15)), max(as.numeric(target.sizes.regDB.15))) \n\n\n# Plot regulon DB target size distribution\n#-----------------------------------------\n\n\ntarget.size.min <- min(c(as.numeric(target.sizes.regDB.5), as.numeric(target.sizes.regDB.10), as.numeric(target.sizes.regDB.15)))\ntarget.size.max <- max(c(as.numeric(target.sizes.regDB.5), as.numeric(target.sizes.regDB.10), as.numeric(target.sizes.regDB.15)))\n\n#XLIMIT <- c(target.size.min-0, target.size.max+5) \n\nXLIMIT <- c(target.size.min, target.size.nopert+14) \nYLIMIT <- c(0, 45) \n\ny.abline.txt <- 30\n\ncex.abline.text  <- 1.2\n\n# Plot target size distribution for regulon DB with 5 perturbations\n#--------------------------------------------------- \nfigdir <- './figs/'\ndir.create(figdir)\nfigname <- paste(figdir, 'distr.target.sizes.pdf') \n\n\npdf(file = figname, width=6, height=6, paper='special', onefile = TRUE)\npar(mfrow=c(3,1))\n\nhist(as.numeric(target.sizes.regDB.5), xlim = XLIMIT, ylim = YLIMIT, main = toString(range.target.size.regDB.5), xlab = \"\")\nabline(v=mean.target.size.regDB.5, col='red', lwd=2)\ntext(mean.target.size.regDB.5, y=y.abline.txt, mean.target.size.regDB.5, cex=cex.abline.text)\n\nabline(v=target.size.nopert, col='red', lwd=2)\ntext(target.size.nopert, y=y.abline.txt, target.size.nopert, cex=cex.abline.text)\n\n\n# Target sizes for regulon DB with 5 perturbations\n#---------------------------------------------------\nhist(as.numeric(target.sizes.regDB.10), xlim = XLIMIT, ylim = YLIMIT, main = toString(range.target.size.regDB.10), xlab = \"\") \nabline(v=mean.target.size.regDB.10, col='red', lwd=2)\ntext(mean.target.size.regDB.10, y=y.abline.txt, mean.target.size.regDB.10, cex=cex.abline.text)\n\nabline(v=target.size.nopert, col='red', lwd=2)\ntext(target.size.nopert, y=y.abline.txt, target.size.nopert, cex=cex.abline.text)\n\n\n# Target sizes for regulon DB with 5 perturbations\n#---------------------------------------------------\nhist(as.numeric(target.sizes.regDB.15), xlim = XLIMIT, ylim = YLIMIT, main = toString(range.target.size.regDB.15), xlab = \"\")\nabline(v=mean.target.size.regDB.15, col='red', lwd=2)\ntext(mean.target.size.regDB.15, y=y.abline.txt, mean.target.size.regDB.15, cex=cex.abline.text)\n\nabline(v=target.size.nopert, col='red', lwd=2)\ntext(target.size.nopert, y=y.abline.txt, target.size.nopert, cex=cex.abline.text)\n\ndev.off()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1550937232188.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1001515371",
    "id" : "29C61D5B",
    "lastKnownWriteTime" : 1550940969,
    "last_content_update" : 1550940969724,
    "path" : "~/research/netact/nca.sim/tfnetwork.random/phase.05/net30tf.dis/regDBs/cal.tg_size.distr.R",
    "project_path" : "cal.tg_size.distr.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}